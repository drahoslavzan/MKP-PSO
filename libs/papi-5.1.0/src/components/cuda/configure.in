# Process this file with autoconf to produce a configure script.
# File: components/cuda/configure.in
# CVS: $Id$


AC_INIT
AC_ARG_WITH(cuda_incdir,
            [--with-cuda_incdir=<path> Specify path to CUDA includes],
            [CUDA_INCDIR=$withval
             CFLAGS="$CFLAGS -I$withval"],
            [AC_MSG_ERROR([Component requires path to CUDA includes])])	


AC_ARG_WITH(cupti_incdir,
            [--with-cupti_incdir=<path> Specify path to CuPTI includes],
            [CUPTI_INCDIR=$withval
             CFLAGS="$CFLAGS -I$withval"],
            [AC_MSG_ERROR([Component requires path to CuPTI includes])])	


AC_ARG_WITH(cupti_libdir,
            [--with-cupti_libdir=<path> Specify path to cupti library],
            [CUPTI_LIBDIR=$withval
             LDFLAGS="$LDFLAGS -L$withval -lcupti" 
             AC_CHECK_LIB([cupti], 
                          [cuptiSubscribe], 
                          [],				          
                          [AC_MSG_ERROR([libcupti.a not found])])],
            [AC_MSG_ERROR([Component requires path to cupti library])])


nvcc_version=`nvcc -V 2>&1 | tail -n 1 | awk '{printf $5}'`
major=`echo $nvcc_version | sed 's/\([[^.]][[^.]]*\).*/\1/'`
minor=`echo $nvcc_version | sed 's/[[^.]][[^.]]*.\([[^.,]][[^.,]]*\).*/\1/'`

echo "CUDA $major.$minor used"

if test "$major" -lt 4; then
	echo "CUDA $major.$minor not supported"
fi

if test "$major" -eq 4; then
	if test "$minor" -eq 0; then
		CUDA_VERSION="-DCUDA_4_0"
	fi
fi

AC_CONFIG_FILES([Makefile.cuda])
AC_SUBST(CUDA_VERSION)
AC_SUBST(CUDA_INCDIR)
AC_SUBST(CUPTI_INCDIR)
AC_SUBST(CUPTI_LIBDIR)
AC_OUTPUT
