.TH "PAPI_flops" 3 "Tue Jan 15 2013" "Version 5.1.0.2" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_flops \- 
.PP
Simplified call to get Mflops/s (floating point instruction rate), real and processor time.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
\fBC Interface: \fP
.RS 4
#include <\fBpapi.h\fP> 
.br
 int PAPI_flops( float *rtime, float *ptime, long long *flpops, float *mflops );
.RE
.PP
\fBParameters:\fP
.RS 4
\fI*rtime\fP total realtime since the first PAPI_flops() call 
.br
\fI*ptime\fP total process time since the first PAPI_flops() call 
.br
\fI*flpins\fP total floating point instructions since the first call 
.br
\fI*rtime\fP total realtime since the first PAPI_flops() call 
.br
\fI*ptime\fP total process time since the first PAPI_flops() call 
.br
\fI*flpops\fP total floating point instructions since the first call
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIPAPI_EINVAL\fP The counters were already started by something other than: PAPI_flips() or PAPI_flops(). 
.br
\fIPAPI_ENOEVNT\fP The floating point operations, floating point instructions or total cycles event does not exist. 
.br
\fIPAPI_ENOMEM\fP Insufficient memory to complete the operation.
.RE
.PP
The first call to PAPI_flops() will initialize the PAPI High Level interface, set up the counters to monitor PAPI_FP_OPS and PAPI_TOT_CYC events and start the counters. Subsequent calls will read the counters and return total real time, total process time, total floating point instructions since the start of the measurement and the Mflop/s rate since latest call to PAPI_flops(). A call to PAPI_stop_counters() will stop the counters from running and then calls such as PAPI_start_counters() can safely be used. 

.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code.
